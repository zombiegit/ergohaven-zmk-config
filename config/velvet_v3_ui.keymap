#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };
    };

    combos {
        compatible = "zmk,combos";

        cLPAR {
            bindings = <&kp LPAR>;
            key-positions = <4 5>;
        };

        cRPAR {
            bindings = <&kp RPAR>;
            key-positions = <6 7>;
        };

        cLBRCT {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
        };

        cRTBRCT {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        cLBRC {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
        };

        cRBRC {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC         &kp Q  &kp W     &kp E     &kp R  &kp T                        &kp Y  &kp U  &kp I      &kp O     &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S     &kp D     &kp F  &kp G                        &kp H  &kp J  &kp K      &kp L     &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X     &kp C     &kp V  &kp B                        &kp N  &kp M  &kp COMMA  &kp DOT   &kp FSLH  &kp TAB
                       &kp LALT  &kp LGUI  &mo 4  &mo 1  &kp SPACE    &kp RET  &mo 2  &none  &kp LBKT   &kp RBKT
            >;

            display-name = "Base";
        };

        Navigation {
            bindings = <
&trans   &trans  &kp N7  &kp N8        &kp N9  &trans                     &trans         &trans        &kp UP_ARROW   &trans           &trans         &trans
&kp TAB  &trans  &kp N4  &kp N5        &kp N6  &kp RET                    &trans         &kp LEFT      &kp DOWN       &kp RIGHT_ARROW  &trans         &trans
&trans   &trans  &kp N1  &kp NUMBER_2  &kp N3  &kp DEL                    &kp LA(SPACE)  &kp LC(LEFT)  &kp PAGE_DOWN  &kp PAGE_UP      &kp LC(RIGHT)  &trans
                 &trans  &kp N0        &trans  &trans   &trans    &trans  &mo 3          &trans        &trans         &trans
            >;

            display-name = "Navigation";
        };

        Symbols {
            bindings = <
&kp TILDE        &trans  &kp PLUS  &kp MINUS  &kp EQUAL  &kp DOLLAR                      &kp CARET  &kp DQT   &kp UNDER  &kp SQT   &trans    &trans
&kp GRAVE        &trans  &kp LT    &kp HASH   &kp GT     &kp AT                          &kp PRCNT  &kp LBRC  &kp SEMI   &kp RBRC  &kp EXCL  &kp QUESTION
&kp PRINTSCREEN  &trans  &kp STAR  &kp COLON  &kp UNDER  &kp PRCNT                       &kp AT     &kp PIPE  &kp TILDE  &kp AMPS  &trans    &trans
                         &kp AMPS  &kp PIPE   &trans     &mo 3       &kp HASH    &trans  &trans     &trans    &trans     &trans
            >;

            display-name = "Symbols";
        };

        Adjust {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3            &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP            &none         &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT              &none         &none
                    &none   &none    &none    &none    &none    &none  &none         &none         &kp LA(LC(UP))    &kp LA(LC(DOWN_ARROW))
            >;

            display-name = "Adjust";
        };

        Mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &mo 5   &mkp MB3  &mkp MB2  &mkp MB1  &mo 6                     &mo 6   &mkp MB1  &mkp MB2  &mkp MB3  &mo 5   &trans
&trans  &trans  &trans    &trans    &mo 6     &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        Sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        User0 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User0";
        };

        User1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User1";
        };

        User2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User2";
        };

        User3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User3";
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <5>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <6>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
